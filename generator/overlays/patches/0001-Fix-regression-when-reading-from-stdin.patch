From 632c195ab7c2731ecd4d58e805a3dce2ec670c0c Mon Sep 17 00:00:00 2001
From: James Little <littleguy23@gmail.com>
Date: Thu, 10 Mar 2022 22:20:05 -0500
Subject: [PATCH] Fix regression when reading from stdin

---
 stork-cli/src/io.rs | 23 ++++++++++++-----------
 1 file changed, 12 insertions(+), 11 deletions(-)

diff --git a/stork-cli/src/io.rs b/stork-cli/src/io.rs
index 272e8dc..93d6204 100644
--- a/stork-cli/src/io.rs
+++ b/stork-cli/src/io.rs
@@ -13,7 +13,7 @@ pub fn read_stdin_bytes() -> Option<Bytes> {
 
     if atty::isnt(Stream::Stdin) {
         let mut stdin_buffer = Vec::<u8>::new();
-        let _ = io::stdin().read(&mut stdin_buffer);
+        let _ = io::stdin().read_to_end(&mut stdin_buffer);
         return Some(Bytes::from(stdin_buffer));
     }
 
@@ -21,17 +21,18 @@ pub fn read_stdin_bytes() -> Option<Bytes> {
 }
 
 pub fn read_bytes_from_path(path: &str) -> Result<Bytes, StorkCommandLineError> {
-    match (path, read_stdin_bytes()) {
-        ("-", Some(stdin)) => Ok(stdin),
-        ("-", None) => Err(StorkCommandLineError::InteractiveStdinNotAllowed),
-        // handle ("", Some) or ("", None), perhaps
-        _ => {
-            let pathbuf = std::path::PathBuf::from(path);
-            std::fs::read(&pathbuf)
-                .map_err(|e| StorkCommandLineError::FileReadError(path.to_string(), e))
-                .map(Bytes::from)
-        }
+    if path == "-" {
+        return match read_stdin_bytes() {
+            Some(stdin) => Ok(stdin),
+            None => Err(StorkCommandLineError::InteractiveStdinNotAllowed),
+        };
     }
+
+    // TODO: Handle path == "" case
+    let pathbuf = std::path::PathBuf::from(path);
+    std::fs::read(&pathbuf)
+        .map(Bytes::from)
+        .map_err(|e| StorkCommandLineError::FileReadError(path.to_string(), e))
 }
 
 pub fn read_stdin() -> Option<String> {
-- 
2.34.1

